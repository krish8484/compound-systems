syntax = "proto3";

package api;

service SchedulerApi {
    rpc SubmitTask(TaskRequest) returns (SubmitTaskToSchedulerResponse) {}
    rpc TaskCompleted(TaskCompletedRequest) returns (TaskCompletedResponse) {}
    rpc RegisterWorker(RegisterWorkerRequest) returns (RegisterWorkerResponse) {}
}

service WorkerApi {
    rpc GetResult(GetResultRequest) returns (GetResultResponse) {}
    rpc SubmitTask(TaskRequest) returns (TaskResponse) {}
}

message TaskRequest {
    Task task = 1;
}

message TaskResponse {
    Future future = 1;
}

message SubmitTaskToSchedulerResponse{
    repeated Future futures = 1;
}

message TaskCompletedRequest {
    string taskId = 1;
    int32 workerId = 2;
    Status status = 3;
}

message TaskCompletedResponse {
    Status status = 1;
}

message RegisterWorkerRequest {
    WorkerInfo workerInfo = 1;
}

message RegisterWorkerResponse {
    int32 workerIdAssignedByScheduler = 1;
}

message GetResultRequest {
    Future future = 1;
}

message GetResultResponse {
    Result result = 1;
}

/*
taskData is a list of bytes and/or futures.
*/
message Task {
    string taskId = 1;
    string taskDefinition = 2;
    repeated TaskDataParam taskData = 3;
}

message Future {
    string resultLocation = 1;
    string hostName = 2;
    int32 port = 3;
}

message Status {
    bool success = 1;
}


message WorkerInfo {
    string hostName = 1;
    int32 portNumber = 2;
    int32 maxThreadCount = 3;
    bool isGPUEnabled = 4;
}

/*
TaskDataParam can either have a future or bytes but not both.
Read this for more details: https://developers.google.com/protocol-buffers/docs/proto3#oneof
*/
message TaskDataParam {
    oneof dataParam {
        ListOfFutures listOfFutures = 1;
        bytes data = 2;
    }
}

message ListOfFutures {
    repeated Future futures = 1;
}

message Result {
    ResultStatus resultStatus = 1;
    bytes data = 2;
    Error error = 3;
}

message Error{
    ErrorType errorType = 1;
    string errorMessage = 2;
    Task failingTask = 3;
    Future failingFuture = 4;
}

enum ErrorType {
    UNABLETOCONNECTWITHWORKERSFORRESULT = 0;
    ERRORWHENEXECUTINGTASK = 1;
}

enum ResultStatus {
    COMPLETED = 0;
    ERROR = 1;
    INPROGRESS = 2;
}